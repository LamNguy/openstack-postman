{
	"variables": [],
	"info": {
		"name": "Networking API v2.0",
		"_postman_id": "99c6ad69-0d7b-d85c-c25d-4d4254608e7c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "API Versions",
			"description": "Lists information for all Networking API versions.",
			"item": [
				{
					"name": "Show API v2 details",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "/v2"
					},
					"response": []
				},
				{
					"name": "List API versions",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists information about all Networking API versions."
					},
					"response": []
				}
			]
		},
		{
			"name": "Extensions",
			"description": "",
			"item": [
				{
					"name": "List extensions",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/extensions",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists information about all Networking API versions."
					},
					"response": []
				},
				{
					"name": "Show extension details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"alias\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/extensions/{{alias}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for an extension, by alias."
					},
					"response": []
				}
			]
		},
		{
			"name": "Floating IPs (floatingips)",
			"description": "",
			"item": [
				{
					"name": "List floating IPs",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/floatingips",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists floating IPs that are accessible to the tenant who submits the request.\r\n\r\nDefault policy settings return only those floating IPs that are owned by the tenant who submits the request, unless an admin user submits the request."
					},
					"response": []
				},
				{
					"name": "Create floating IP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"floating_network_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"port_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/floatingips",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"floatingip\": {\r\n        \"floating_network_id\": {{floating_network_id}},\r\n        \"port_id\": {{port_id}}\r\n    }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Show floating IP details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"floatingip_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/floatingips/{{floatingip_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete floating IP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups/{{security_group_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a floating IP and, if present, its associated port."
					},
					"response": []
				}
			]
		},
		{
			"name": "Networks",
			"description": "Lists, shows details for, creates, updates, and deletes networks.",
			"item": [
				{
					"name": "Show network details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Show details for a network.\n"
					},
					"response": []
				},
				{
					"name": "Update network",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates a network."
					},
					"response": []
				},
				{
					"name": "Delete network",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a network and its associated resources."
					},
					"response": []
				},
				{
					"name": "Create network",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a network."
					},
					"response": []
				},
				{
					"name": "Bulk create networks",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"networks\": [\r\n        {\r\n            \"name\": \"sample_network3\",\r\n            \"admin_state_up\": true\r\n        },\r\n        {\r\n            \"name\": \"sample_network4\",\r\n            \"admin_state_up\": true\r\n        }\r\n    ]\r\n}"
						},
						"description": "Creates multiple networks in a single request.\nIn the request body, specify a list of networks."
					},
					"response": []
				}
			]
		},
		{
			"name": "Networks multiple provider extension (networks)",
			"description": "Enables administrative users to define multiple physical bindings for an OpenStack Networking network and list or show details for networks with multiple physical bindings.\r\n\r\nYou cannot update any provider attributes. If you try to do so, an error occurs.\r\n\r\nTo delete a network with multiple physical bindings, issue a normal delete network request.\r\n\r\nTo define multiple physical bindings for a network, include a segments list in the request body of a POST /v2.0/networks request. Each element in the segments list has the same structure as the provider network attributes. These attributes are provider:network_type, provider:physical_network, and provider:segmentation_id. The validation rules for these attributes are the same as for the Networks provider extended attributes . You cannot use both extensions at the same time.\r\n\r\nThe NSX and ML2 plug-ins support this extension. With the ML2 plug- in, you can specify multiple VLANs for a network, a VXLAN tunnel ID, and a VLAN.",
			"item": [
				{
					"name": "Show details for a network with multiple segments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a network with multiple segments."
					},
					"response": []
				},
				{
					"name": "List networks with multiple segment mappings",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists networks that are accessible to the tenant who submits the request. Networks with multiple segments include the segments list in the response."
					},
					"response": []
				},
				{
					"name": "Create network with multiple segment mappings",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"network\": {\r\n        \"segments\": [\r\n            {\r\n                \"provider:segmentation_id\": \"2\",\r\n                \"provider:physical_network\": \"8bab8453-1bc9-45af-8c70-f83aa9b50453\",\r\n                \"provider:network_type\": \"vlan\"\r\n            },\r\n            {\r\n                \"provider:physical_network\": \"8bab8453-1bc9-45af-8c70-f83aa9b50453\",\r\n                \"provider:network_type\": \"stt\"\r\n            }\r\n        ],\r\n        \"name\": \"net1\",\r\n        \"admin_state_up\": true\r\n    }\r\n}"
						},
						"description": "Creates a network with multiple segment mappings."
					},
					"response": []
				}
			]
		},
		{
			"name": "Networks provider extended attributes (networks)",
			"description": "Lists, creates, shows information for, updates, and deletes networks.\r\n\r\nThe provider extension decorates network resources with additional attributes. These attributes are provider:network_type, provider:physical_network, and provider:segmentation_id. The validation rules for these attributes are the same as for the Networks multiple provider extension . You cannot use both extensions at the same time.",
			"item": [
				{
					"name": "Show network details (provider network)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Show details for a network.\n"
					},
					"response": []
				},
				{
					"name": "Update network (provider network)",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates a network."
					},
					"response": []
				},
				{
					"name": "Delete network (provider network)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a network."
					},
					"response": []
				},
				{
					"name": "List networks (provider network)",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "List networks that are accessible to the tenant who submits the request."
					},
					"response": []
				},
				{
					"name": "Create network (provider network)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"name\", \"SETME\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"network\": {\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}}\r\n    }\r\n}"
						},
						"description": "Creates a network."
					},
					"response": []
				}
			]
		},
		{
			"name": "Ports",
			"description": "Lists, shows details for, creates, updates, and deletes ports.",
			"item": [
				{
					"name": "Show port details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a port."
					},
					"response": []
				},
				{
					"name": "Update port",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "// variables in uri\npostman.setEnvironmentVariable(\"port_id\", \"SETME\");\n\n// variables in body\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"device_owner\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"binding_host_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"port\": {\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}},\r\n        \"device_owner\": {{device_owner}},\r\n        \"binding:host_id\": {{binding_host_id}}\r\n    }\r\n}"
						},
						"description": "Updates a port.\r\n\r\nYou can update information for a port, such as its symbolic name and associated IPs. When you update IPs for a port, any previously associated IPs are removed, returned to the respective subnet allocation pools, and replaced by the IPs in the request body. Therefore, this operation replaces the fixed_ip attribute when you specify it in the request body. If the updated IP addresses are not valid or are already in use, the operation fails and the existing IP addresses are not removed from the port.\r\n\r\nWhen you update security groups for a port and the operation succeeds, any associated security groups are removed and replaced by the security groups in the request body. Therefore, this operation replaces the security_groups attribute when you specify it in the request body. If the security groups are not valid, the operation fails and the existing security groups are not removed from the port."
					},
					"response": []
				},
				{
					"name": "Delete port",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a port.\r\n\r\nAny IP addresses that are associated with the port are returned to the respective subnets allocation pools."
					},
					"response": []
				},
				{
					"name": "List ports",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists ports to which the tenant has access.\r\n\r\nDefault policy settings return only those ports that are owned by the tenant who submits the request, unless the request is submitted by a user with administrative rights. Users can control which attributes are returned by using the fields query parameter. You can use query parameters to filter the response."
					},
					"response": []
				},
				{
					"name": "Create port",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"port\": {\r\n        \"network_id\": {{network_id}},\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}}\r\n    }\r\n}"
						},
						"description": "Creates a port on a network."
					},
					"response": []
				},
				{
					"name": "Bulk create ports",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ports\": [\r\n        {\r\n            \"name\": \"sample_port_1\",\r\n            \"admin_state_up\": false,\r\n            \"network_id\": \"a87cc70a-3e15-4acf-8205-9b711a3531b7\"\r\n        },\r\n        {\r\n            \"name\": \"sample_port_2\",\r\n            \"admin_state_up\": false,\r\n            \"network_id\": \"a87cc70a-3e15-4acf-8205-9b711a3531b7\"\r\n        }\r\n    ]\r\n}"
						},
						"description": "Creates multiple ports in a single request. Specify a list of ports in the request body.\r\n\r\nGuarantees the atomic completion of the bulk operation."
					},
					"response": []
				}
			]
		},
		{
			"name": "Ports binding extended attributes (ports)",
			"description": "Lists, creates, shows information for, updates, and deletes ports.",
			"item": [
				{
					"name": "Show port details (port binding)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a port."
					},
					"response": []
				},
				{
					"name": "Update port (port binding)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "// variables in uri\npostman.setEnvironmentVariable(\"port_id\", \"SETME\");\n\n// variables in body\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"device_owner\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"binding_host_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"port\": {\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}},\r\n        \"device_owner\": {{device_owner}},\r\n        \"binding:host_id\": {{binding_host_id}}\r\n    }\r\n}"
						},
						"description": "Updates a port."
					},
					"response": []
				},
				{
					"name": "Delete port (port binding)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/{{port_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a port."
					},
					"response": []
				},
				{
					"name": "List ports (port binding)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"port_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists ports to which the tenant has access."
					},
					"response": []
				},
				{
					"name": "Create port (port binding)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/ports/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"port\": {\r\n        \"network_id\": {{network_id}},\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}}\r\n    }\r\n}"
						},
						"description": "Creates a port on a network."
					},
					"response": []
				}
			]
		},
		{
			"name": "Routers (routers)",
			"description": "A router is a logical entity for forwarding packets across internal subnets and NATting them on external networks through an appropriate external gateway.\r\n\r\nThis resource is provided when router extension is enabled.",
			"item": [
				{
					"name": "List routers",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists logical routers that the project who submits the request can access.\r\n\r\nDefault policy settings return only those routers that the project who submits the request owns, unless an administrative user submits the request.\r\n\r\nUse the fields query parameter to control which fields are returned in the response body. Additionally, you can filter results by using query string parameters."
					},
					"response": []
				},
				{
					"name": "Create router",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"name\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"network_id\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"enable_snat\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"external_fixed_ips\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"ip_address\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");\r\n\r\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"router\": {\r\n        \"name\": {{name}},\r\n        \"external_gateway_info\": {\r\n            \"network_id\": {{network_id}},\r\n            \"enable_snat\": {{enable_snat}},\r\n            \"external_fixed_ips\": [\r\n                {\r\n                    \"ip_address\": \"{{ip_address}}\",\r\n                    \"subnet_id\": {{subnet_id}}\r\n                }\r\n            ]\r\n        },\r\n        \"admin_state_up\": {{admin_state_up}}\r\n    }\r\n}"
						},
						"description": "Creates a logical router.\r\n\r\nThis operation creates a logical router. The logical router does not have any internal interface and it is not associated with any subnet. You can optionally specify an external gateway for a router at create time. The external gateway for the router must be plugged into an external network. An external network has its router:external extended field set to true. To specify an external gateway, the ID of the external network must be passed in the network_id parameter of the external_gateway_info attribute in the request body."
					},
					"response": []
				},
				{
					"name": "Show router details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"router_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers/{{router_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update router",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"router_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"network_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"enable_snat\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"external_fixed_ips\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"ip_address\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers/{{router_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"router\": {\r\n        \"external_gateway_info\": {\r\n            \"network_id\": {{network_id}},\r\n            \"enable_snat\": {{enable_snat}},\r\n            \"external_fixed_ips\": [\r\n                {\r\n                    \"ip_address\": {{ip_address}},\r\n                    \"subnet_id\": {{subnet_id}}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete router",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"router_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers/{{router_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add interface to router",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"router_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers/{{router_id}}/add_router_interface",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnet_id\": {{subnet_id}}\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove interface from router",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"router_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/routers/{{router_id}}/remove_router_interface",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnet_id\": {{subnet_id}}\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Security groups (security-groups)",
			"description": "Lists, creates, shows information for, updates, and deletes security groups.",
			"item": [
				{
					"name": "Show security group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups/{{security_group_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a security group.\r\n\r\nThe response contains the description, name, UUID, and security group rules that are associated with the security group and tenant."
					},
					"response": []
				},
				{
					"name": "Update security group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");\n\n\n\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"description\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups/{{security_group_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"security_group\": {\r\n        \"name\": {{name}},\r\n        \"description\": {{description}}\r\n    }\r\n}"
						},
						"description": "Updates a security group."
					},
					"response": []
				},
				{
					"name": "Delete security group copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups/{{security_group_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete security group."
					},
					"response": []
				},
				{
					"name": "List security groups",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists OpenStack Networking security groups to which the tenant has access.\r\n\r\nThe list shows the UUID for and the rules that are associated with each security group."
					},
					"response": []
				},
				{
					"name": "Create security groups",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"security_group_id\", \"variable_value\");\n\n\npostman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"description\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/security-groups",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"security_group\": {\r\n        \"name\": {{name}},\r\n        \"description\": {{description}}\r\n    }\r\n}"
						},
						"description": "Creates an OpenStack Networking security group.\r\n\r\nThis operation creates a security group with default security group rules for the IPv4 and IPv6 ether types."
					},
					"response": []
				}
			]
		},
		{
			"name": "Subnet pools extension (subnetpools)",
			"description": "Lists, creates, shows details for, updates, and deletes subnet pools.",
			"item": [
				{
					"name": "Show subnet pool",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnetpool_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnetpools/{{subnetpool_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows information for a subnet pool."
					},
					"response": []
				},
				{
					"name": "Update subnet pool",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnetpool_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnetpools/{{subnetpool_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnetpool\": {\r\n        \"name\": \"my-new-subnetpool-name\",\r\n        \"prefixes\": [\r\n            \"2001:db8::/64\",\r\n            \"2001:db8:0:1::/64\",\r\n            \"2001:db8:0:2::/64\"\r\n        ],\r\n        \"min_prefixlen\": 64,\r\n        \"default_prefixlen\": 64,\r\n        \"max_prefixlen\": 64\r\n    }\r\n}"
						},
						"description": "Updates a subnet pool."
					},
					"response": []
				},
				{
					"name": "Deletes a subnet pool",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnetpool_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnetpools/{{subnetpool_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a subnet pool.\r\n\r\nThe operation fails if any subnets allocated from the subnet pool are still in use."
					},
					"response": []
				},
				{
					"name": "List subnet pools",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnetpools",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists subnet pools to which the tenant has access.\r\n\r\nDefault policy settings returns exclusively subnet pools owned by the tenant submitting the request, unless the request is submitted by a user with administrative rights."
					},
					"response": []
				},
				{
					"name": "List subnet pools copy",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnetpools",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnetpool\": {\r\n        \"name\": \"my-subnet-pool\",\r\n        \"prefixes\": [\r\n            \"192.168.0.0/16\",\r\n            \"10.10.0.0/21\"\r\n        ],\r\n        \"default_prefixlen\": 25,\r\n        \"min_prefixlen\": 24,\r\n        \"max_prefixlen\": 30,\r\n        \"shared\": \"false\"\r\n    }\r\n}"
						},
						"description": "Creates a subnet pool."
					},
					"response": []
				}
			]
		},
		{
			"name": "Subnets",
			"description": "Lists, shows details for, creates, updates, and deletes subnet resources.",
			"item": [
				{
					"name": "List subnets",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists subnets to which the tenant has access.\r\n\r\nDefault policy settings returns exclusively subnets owned by the tenant submitting the request, unless the request is submitted by a user with administrative rights. You can control which attributes are returned by using the fields query parameter. You can filter results by using query string parameters."
					},
					"response": []
				},
				{
					"name": "Create subnet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"ip_version\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"cidr\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnet\": {\r\n        \"network_id\": {{network_id}},\r\n        \"ip_version\": {{ip_version}},\r\n        \"cidr\": {{cidr}}\r\n    }\r\n}"
						},
						"description": "Creates a subnet on a network.\r\n\r\nOpenStack Networking does not try to derive the correct IP version from the CIDR. If you do not specify the gateway_ip attribute, OpenStack Networking allocates an address from the CIDR for the gateway for the subnet.\r\n\r\nTo specify a subnet without a gateway, set the gateway_ip attribute to null in the request body. If you do not specify the allocation_pools attribute, OpenStack Networking automatically allocates pools for covering all IP addresses in the CIDR, excluding the address reserved for the subnet gateway. Otherwise, you can explicitly specify allocation pools as shown in the following example.\r\n\r\nWhen you specify both the allocation_pools and gateway_ip attributes, you must ensure that the gateway IP does not overlap with the allocation pools; otherwise, the call returns the Conflict (409) response code.\r\n\r\nA subnet can have one or more name servers and host routes. Hosts in this subnet use the name servers. Devices with IP addresses from this subnet, not including the local subnet route, use the host routes.\r\n\r\nSpecify the ipv6_ra_mode and ipv6_address_mode attributes to create subnets that support IPv6 configurations, such as stateless address autoconfiguration (SLAAC), DHCPv6 stateful, and DHCPv6 stateless configurations."
					},
					"response": []
				},
				{
					"name": "Bulk create subnet",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnets\": [\r\n        {\r\n            \"cidr\": \"192.168.199.0/24\",\r\n            \"ip_version\": 4,\r\n            \"network_id\": \"e6031bc2-901a-4c66-82da-f4c32ed89406\"\r\n        },\r\n        {\r\n            \"cidr\": \"10.56.4.0/22\",\r\n            \"ip_version\": 4,\r\n            \"network_id\": \"64239a54-dcc4-4b39-920b-b37c2144effa\"\r\n        }\r\n    ]\r\n}"
						},
						"description": "Creates multiple subnets in a single request. Specify a list of subnets in the request body.\r\n\r\nThe bulk create operation is always atomic. Either all or no subnets in the request body are created."
					},
					"response": []
				},
				{
					"name": "Show subnet details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets/{{subnet_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a subnet.\r\n\r\nUse the fields query parameter to filter the results."
					},
					"response": []
				},
				{
					"name": "Update subnet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"name\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets/{{subnet_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subnet\": {\r\n        \"name\": {{name}}\r\n    }\r\n}"
						},
						"description": "Updates a subnet.\r\n\r\nSome attributes, such as IP version (ip_version), and CIDR (cidr) cannot be updated. Attempting to update these attributes results in a 400 Bad Request error."
					},
					"response": []
				},
				{
					"name": "Delete subnet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"subnet_id\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/subnets/{{subnet_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a subnet.\r\n\r\nThe operation fails if subnet IP addresses are still allocated."
					},
					"response": []
				}
			]
		},
		{
			"name": "VLAN transparency extension (networks)",
			"description": "Enables plug-ins that support VLAN transparency to deliver VLAN- transparent trunk networks. If the service does not support VLAN transparency and a user requests a VLAN-transparent network, the plug-in refuses to create one and returns an appropriate error to the user.\r\n\r\nYou cannot update the vlan-transparent attribute. If you try to do so, an error occurs.\r\n\r\nTo delete a VLAN-transparent network, issue a normal delete network request.\r\n\r\nThe ML2 plug-in currently supports this extension. With the ML2 plug-in, you can set the vlan-transparent attribute to either true or false.",
			"item": [
				{
					"name": "Show VLAN-transparent network details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"network_id\", \"SETME\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks/{{network_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Shows details for a VLAN-transparent network."
					},
					"response": []
				},
				{
					"name": "List networks with VLAN transparency attribute",
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists networks. The response shows the VLAN transparency attribute."
					},
					"response": []
				},
				{
					"name": "Create VLAN-transparent network",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"name\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"admin_state_up\", \"variable_value\");\n\npostman.setEnvironmentVariable(\"vlan_transparent\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://{{IP}}:{{NEUTRON_PORT}}/v2.0/networks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"network\": {\r\n        \"name\": {{name}},\r\n        \"admin_state_up\": {{admin_state_up}},\r\n        \"vlan_transparent\": {{vlan_transparent}}\r\n    }\r\n}"
						},
						"description": "Creates a VLAN-transparent network."
					},
					"response": []
				}
			]
		}
	]
}